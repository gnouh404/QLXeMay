<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABHtJREFUaEPtmsmvLVMUh6++HUhEF4loEgP9E92IAcGAhJEJBvqH97x4fwARIRHN
        gIQBEiIkGBEzTZCILsFAG8wQjPR9833JXTfr1qnatatOc0/CL/mSd6vWWnvXqb3XXnvXW/lf3dodjoHz
        4XLYClvgMjgPjobdYOm0A5wMt8Lr8Dv808Nv8BrcAieCMTZMe4G/9IfQ1tkhvA/Xwh6wMO0CPsDX0NYp
        +RV8wBfhmVVego/gF2jzka9gM+wEc9UmeBeaHfgLXobtoI0P2yXvaXMj6PMnNOO9DcfCXHQ9OLZzgz/C
        3XAYjNWhcBf8ADm2b+5KmJl8zfdDbuRveAgOgJL2gaPATOW/SzKWMY2d27oHdoSp5EM8BjnwF3AWdGk/
        uBk+gOxnB712E2jTJWPbRvb1Aad6mOabML0eCF26Ar6D7NOGNtp2yTbegOzjEB4lM1MO9DyYctvkOuA4
        z/Y16NMl23oBsn3p4VvlIpUntm9iT+jSNsgNDkHfLvkw+c38DM63Kpke34NwdryWhtMR4LoR9kMxOxmj
        SwfBlxD2b0LVOnMDhJMT9Ewo6UEI+7EYoyQTQM5mV0NRe8M3EA5mi5Is/r6HsB+Lk39XKMm+hL1vqFjO
        5LfhAtW3TpwKYT8tp0BJDm8X4LC/Blpl5vkEwrAm3V0EYT8txupTzozO41adBmFk7VRTdlwM4TMtl0Cf
        Doc8V46HCd0OYWAxV6OzIXym5RyokX0LH6uECVlxhoGVaY0sNZq10RgcAaWyJcu+hd+rXshysfsDwsAy
        u1avQPiNZaJDBblYh99PsG5NOQHipgtUaT/R1AUQvmO5EGplms7b6SNhTQaKG+7shshs9xyE/1D0HSp3
        muF/rhdCrpRxw+3pUO0LzbK9Bn30HSq3zRHjUi+E8gRyfz1G+0POKH1oq88YPQsRxz3+mmbxIMqJdxV8
        BhGvyefgCKgq/DpkHyPeugex8bgxZmg15W7OksPDuTtWsfyxpJl624o6h1bOPE6kZVfnZHepjxvuLYak
        30WrmH4ticcuiFluA06H6+BOeBSeXuWR1WveOwO0HaO8IFoNT8y1tyAMtnuhUgeDycIVPv8YffiruqLb
        ljFqpX3EsM0J5aKx1aChk+BJaDspHIoxngJj9smHD7/WojFvkkpl/CHgA8yiWGxiTGPbRpvc2+d2j4MJ
        9W2svG/+bx5tzgPbcEmwzSz7FDadGyuVj3WcSHF6YnX8BMS9RWGbcQzlaYrVbtwrHkCYSb6FMH4YrIU8
        14pri8a27YN9iWseUfllrKjmcdCn6e+Nwj7kueGw61XzgG7Z8ICuusxx0an5Frho3PRVH5mG8hBbFvzO
        OEoPQFvAjeBeGC3rmMehLfAisWabyVerjXwz98Es9jBr8sNP82PoPHE7sW73N0uZzRaRmt8Bj6jmqp3B
        jJYrgFnhJw3fvG0sTJYz1mYfQ1unhuBZmvv7rm+UC5EVqlsA9zNuzmrmkTau0LeB/yGnWeUuhfyK5fj2
        QMOPMQ5DsVr1mucDfV+n/qtaWfkXpZI0j5I8uOkAAAAASUVORK5CYII=
</value>
  </data>
</root>